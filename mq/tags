!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CMSGQUEUE_H_	c_mq.cpp	9;"	d	file:
CMsgQueue	c_mq.cpp	/^		CMsgQueue();  $/;"	p	class:CMsgQueue	file:	access:public	signature:()
CMsgQueue	c_mq.cpp	/^CMsgQueue::CMsgQueue()  $/;"	f	class:CMsgQueue	signature:()
CMsgQueue	c_mq.cpp	/^class CMsgQueue  $/;"	c	file:
CMsgQueue::CMsgQueue	c_mq.cpp	/^		CMsgQueue();  $/;"	p	class:CMsgQueue	file:	access:public	signature:()
CMsgQueue::CMsgQueue	c_mq.cpp	/^CMsgQueue::CMsgQueue()  $/;"	f	class:CMsgQueue	signature:()
CMsgQueue::init	c_mq.cpp	/^		int init(char* pathName, int type);  $/;"	p	class:CMsgQueue	file:	access:public	signature:(char* pathName, int type)
CMsgQueue::init	c_mq.cpp	/^		long init(int key, int type);  $/;"	p	class:CMsgQueue	file:	access:public	signature:(int key, int type)
CMsgQueue::init	c_mq.cpp	/^int CMsgQueue::init(char* pathName, int type)  $/;"	f	class:CMsgQueue	signature:(char* pathName, int type)
CMsgQueue::init	c_mq.cpp	/^long CMsgQueue::init(int key, int type)  $/;"	f	class:CMsgQueue	signature:(int key, int type)
CMsgQueue::msgQueueID	c_mq.cpp	/^		long msgQueueID;  $/;"	m	class:CMsgQueue	file:	access:private
CMsgQueue::receive	c_mq.cpp	/^		int receive(msg_t& message);  $/;"	p	class:CMsgQueue	file:	access:public	signature:(msg_t& message)
CMsgQueue::receive	c_mq.cpp	/^int CMsgQueue::receive(msg_t& message)  $/;"	f	class:CMsgQueue	signature:(msg_t& message)
CMsgQueue::recvBuf	c_mq.cpp	/^		msgbuf_t recvBuf;  $/;"	m	class:CMsgQueue	file:	access:private
CMsgQueue::send	c_mq.cpp	/^		int send(const msg_t& message);  $/;"	p	class:CMsgQueue	file:	access:public	signature:(const msg_t& message)
CMsgQueue::send	c_mq.cpp	/^int CMsgQueue::send(const msg_t& message)  $/;"	f	class:CMsgQueue	signature:(const msg_t& message)
CMsgQueue::sendBuf	c_mq.cpp	/^		msgbuf_t sendBuf;  $/;"	m	class:CMsgQueue	file:	access:private
CMsgQueue::~CMsgQueue	c_mq.cpp	/^		virtual ~CMsgQueue();  $/;"	p	class:CMsgQueue	file:	access:public	signature:()
CMsgQueue::~CMsgQueue	c_mq.cpp	/^CMsgQueue::~CMsgQueue()  $/;"	f	class:CMsgQueue	signature:()
MessageQueue	mq.cpp	/^		MessageQueue(){}$/;"	f	class:MessageQueue	access:public	signature:()
MessageQueue	mq.cpp	/^class MessageQueue$/;"	c	file:
MessageQueue::MessageQueue	mq.cpp	/^		MessageQueue(){}$/;"	f	class:MessageQueue	access:public	signature:()
MessageQueue::PopTask	mq.cpp	/^		PTask PopTask()$/;"	f	class:MessageQueue	access:public	signature:()
MessageQueue::PushTask	mq.cpp	/^		void PushTask( PTask pTask )$/;"	f	class:MessageQueue	access:public	signature:( PTask pTask )
MessageQueue::m_cond	mq.cpp	/^		std::condition_variable m_cond; $/;"	m	class:MessageQueue	file:	access:private
MessageQueue::m_queue	mq.cpp	/^		std::queue<PTask> m_queue;$/;"	m	class:MessageQueue	file:	access:private
MessageQueue::m_queueMutex	mq.cpp	/^		std::mutex m_queueMutex;$/;"	m	class:MessageQueue	file:	access:private
MessageQueue::~MessageQueue	mq.cpp	/^		~MessageQueue()$/;"	f	class:MessageQueue	access:public	signature:()
PTask	mq.cpp	/^} Task, *PTask;$/;"	t	typeref:struct:task_tag	file:
PopTask	mq.cpp	/^		PTask PopTask()$/;"	f	class:MessageQueue	access:public	signature:()
PushTask	mq.cpp	/^		void PushTask( PTask pTask )$/;"	f	class:MessageQueue	access:public	signature:( PTask pTask )
THREAD_NUM	mq.cpp	84;"	d	file:
Task	mq.cpp	/^} Task, *PTask;$/;"	t	typeref:struct:task_tag	file:
_msg	c_mq.cpp	/^typedef struct _msg {  $/;"	s	file:
_msg::len	c_mq.cpp	/^	int len;  $/;"	m	struct:_msg	file:	access:public
_msg::mText	c_mq.cpp	/^	char mText[1024];  $/;"	m	struct:_msg	file:	access:public
_msgbuf_t	c_mq.cpp	/^typedef struct _msgbuf_t  $/;"	s	file:
_msgbuf_t::msg	c_mq.cpp	/^	msg_t msg;  $/;"	m	struct:_msgbuf_t	file:	access:public
_msgbuf_t::processID	c_mq.cpp	/^	int processID;  $/;"	m	struct:_msgbuf_t	file:	access:public
data	mq.cpp	/^	int data;$/;"	m	struct:task_tag	file:	access:public
init	c_mq.cpp	/^		int init(char* pathName, int type);  $/;"	p	class:CMsgQueue	file:	access:public	signature:(char* pathName, int type)
init	c_mq.cpp	/^		long init(int key, int type);  $/;"	p	class:CMsgQueue	file:	access:public	signature:(int key, int type)
init	c_mq.cpp	/^int CMsgQueue::init(char* pathName, int type)  $/;"	f	class:CMsgQueue	signature:(char* pathName, int type)
init	c_mq.cpp	/^long CMsgQueue::init(int key, int type)  $/;"	f	class:CMsgQueue	signature:(int key, int type)
len	c_mq.cpp	/^	int len;  $/;"	m	struct:_msg	file:	access:public
mText	c_mq.cpp	/^	char mText[1024];  $/;"	m	struct:_msg	file:	access:public
m_cond	mq.cpp	/^		std::condition_variable m_cond; $/;"	m	class:MessageQueue	file:	access:private
m_queue	mq.cpp	/^		std::queue<PTask> m_queue;$/;"	m	class:MessageQueue	file:	access:private
m_queueMutex	mq.cpp	/^		std::mutex m_queueMutex;$/;"	m	class:MessageQueue	file:	access:private
main	mq.cpp	/^int main( int argc, char *argv[] )$/;"	f	signature:( int argc, char *argv[] )
msg	c_mq.cpp	/^	msg_t msg;  $/;"	m	struct:_msgbuf_t	file:	access:public
msgQueueID	c_mq.cpp	/^		long msgQueueID;  $/;"	m	class:CMsgQueue	file:	access:private
msg_t	c_mq.cpp	/^}msg_t;  $/;"	t	typeref:struct:_msg	file:
msgbuf_t	c_mq.cpp	/^} msgbuf_t;  $/;"	t	typeref:struct:_msgbuf_t	file:
processID	c_mq.cpp	/^	int processID;  $/;"	m	struct:_msgbuf_t	file:	access:public
receive	c_mq.cpp	/^		int receive(msg_t& message);  $/;"	p	class:CMsgQueue	file:	access:public	signature:(msg_t& message)
receive	c_mq.cpp	/^int CMsgQueue::receive(msg_t& message)  $/;"	f	class:CMsgQueue	signature:(msg_t& message)
recvBuf	c_mq.cpp	/^		msgbuf_t recvBuf;  $/;"	m	class:CMsgQueue	file:	access:private
send	c_mq.cpp	/^		int send(const msg_t& message);  $/;"	p	class:CMsgQueue	file:	access:public	signature:(const msg_t& message)
send	c_mq.cpp	/^int CMsgQueue::send(const msg_t& message)  $/;"	f	class:CMsgQueue	signature:(const msg_t& message)
sendBuf	c_mq.cpp	/^		msgbuf_t sendBuf;  $/;"	m	class:CMsgQueue	file:	access:private
task_tag	mq.cpp	/^	task_tag( int i ) : data(i) { }$/;"	f	struct:task_tag	access:public	signature:( int i )
task_tag	mq.cpp	/^typedef struct task_tag$/;"	s	file:
task_tag::data	mq.cpp	/^	int data;$/;"	m	struct:task_tag	file:	access:public
task_tag::task_tag	mq.cpp	/^	task_tag( int i ) : data(i) { }$/;"	f	struct:task_tag	access:public	signature:( int i )
thread_fun	mq.cpp	/^void thread_fun( MessageQueue *arguments )$/;"	f	signature:( MessageQueue *arguments )
xxx_write	1.cpp	/^static ssize_t xxx_write(struct file *file, const char *buffer, size_t count, loff_t *ppos)$/;"	f	file:	signature:(struct file *file, const char *buffer, size_t count, loff_t *ppos)
~CMsgQueue	c_mq.cpp	/^		virtual ~CMsgQueue();  $/;"	p	class:CMsgQueue	file:	access:public	signature:()
~CMsgQueue	c_mq.cpp	/^CMsgQueue::~CMsgQueue()  $/;"	f	class:CMsgQueue	signature:()
~MessageQueue	mq.cpp	/^		~MessageQueue()$/;"	f	class:MessageQueue	access:public	signature:()
